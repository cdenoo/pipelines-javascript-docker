# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
- group: DemoVariables
- name: dockerfilePath
  value: '**/Dockerfile'
  
  # Agent VM image name
- name: vmImageName
  value: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(dockerImageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerConnectionName)
        tags: |
          $(build.buildId)
          latest
    - task: HelmInstaller@1
      displayName: Install helm version 3.1.1
      inputs:
        helmVersionToInstall: '3.1.1'
    - task: HelmDeploy@0
      inputs:
        command: 'package'
        chartPath: './charts/$(dockerImageRepository)'
        chartVersion: '$(Build.BuildNumber)'
        save: false
      displayName: Build helm package
    # - script: |
    #     helm package ./charts/$(dockerImageRepository) --version $(Build.BuildNumber) \
    #       --destination $(Build.ArtifactStagingDirectory)
    #   displayName: Build helm package

    - script: |
        az login --service-principal -u $(clientID) -p $(spSecret) --tenant $(tenantID)
        az acr login -n denoocecreg
        az acr helm push \
          --name $(ACRName) \
          $(Build.ArtifactStagingDirectory)/$(dockerImageRepository)-$(Build.BuildNumber).tgz
      displayName: Push helm package to ACR

    - upload: $(Build.ArtifactStagingDirectory)/$(dockerImageRepository)-$(Build.BuildNumber).tgz
      artifact: helmchart

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: pipelines-javascript-docker
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
            - task: HelmInstaller@1
              displayName: Install helm version 3.1.1
              inputs:
                helmVersionToInstall: '3.1.1'

            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                kubernetesServiceConnection: $(kubernetesConnectionName)
                action: createSecret
                secretName: $(kubernetesImagePullSecret)
                dockerRegistryEndpoint: $(dockerConnectionName)
            - task: HelmDeploy@0
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceConnection: 'KUBE'
                command: 'upgrade'
                chartType: 'FilePath'
                chartPath: '$(Pipeline.Workspace)/helmchart/$(dockerImageRepository)-$(Build.BuildNumber).tgz'
                overrideValues: 'pullSecret=$(kubernetesImagePullSecret)'